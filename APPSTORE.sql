--NEW SQL PROJECT USING APPLE STORE DATA 
--CREATED ON 20/08/2023

-- 5 CSV FILE WITH FOUR SEPARATION, HENCE IMPERATIVE TO COMBINE DESCRIPTION FILES

CREATE TABLE apple_store_description_combined AS 
SELECT * FROM appleStore_description1
UNION ALL 
SELECT * FROM appleStore_description2
UNION ALL 
SELECT * FROM appleStore_description3 
UNION ALL 
SELECT * FROM appleStore_description4;

 -- EXPLORATORY DATA ANALYSIS
 
 --1.CHECKING THE NUMBER OF UNIQUE APPS IN THE APP STORE
 SELECT COUNT(DISTINCT id) AS UNIQUE_APPID
 FROM AppleStore; --7197
 
 SELECT COUNT(DISTINCT id) AS UNIQUE_APPID
 FROM apple_store_description_combined; --7197
 
  --CHECKING FOR ANY MISSING VALUES IN SOME KEY COLUMNS 
 SELECT COUNT(*) AS MISSING_VALUES 
 FROM AppleStore
 WHERE track_name IS NULL OR ID IS NULL OR user_rating IS NULL; --0 
 
  SELECT COUNT(*) AS MISSING_VALUES 
 FROM apple_store_description_combined
 WHERE track_name IS NULL OR id IS NULL OR size_bytes IS NULL; --0
 
 --NUMBER OF APPS PER GENRE
 SELECT prime_genre, COUNT(*) AS NUMAPPS
 FROM AppleStore
 GROUP BY prime_genre
 ORDER BY NUMAPPS DESC;
 
 --OVERVIEW OF APP RATINGS 
 SELECT MIN(user_rating) AS MINRATING, 
 		MAX(user_rating) AS MAXRATING, 
        AVG(user_rating) AS AVG_RATING
 FROM AppleStore;
 
  --ANALYSIS OF DATA
 --COMPARING WHETHER PAID APPS HAVE HIGHER RATINGS THAN FREE APPS
 SELECT CASE 
 	WHEN price > 0 THEN 'PAID'
    ELSE 'FREE'
    END AS APP_TYPE, 
    AVG(user_rating) AS AVG_RATING
 FROM AppleStore
 GROUP BY APP_TYPE;
 
  --CHECKING IF APPS THAT SUPPORT MORE LANGUAGES HAVE HIGHER RATINGS
 SELECT CASE 
 	WHEN lang_num < 10 THEN 'LOW_LANG_NUM'
    WHEN lang_num BETWEEN 10 AND 30 THEN 'MID_LANG_NUM'
    ELSE 'HIGH_LANG_NUM'
    END AS LANG_RATE_DESCRIPTION, 
    AVG(user_rating) AS AVG_USER_RATING
  FROM AppleStore
  GROUP BY LANG_RATE_DESCRIPTION
  ORDER BY AVG_USER_RATING DESC;
  
  --GENRE WITH LOW RATING 
  SELECT prime_genre, 
  		AVG(user_rating) AS AVG_RATINGS
  FROM AppleStore
  GROUP BY prime_genre
  ORDER BY AVG_RATINGS ASC
  LIMIT 10;
  
  --CHECKING FOR CORRELATION BETWEEN LENGTH OF APP DESCRIPTION AND USER RATING
  SELECT CASE 
  	WHEN LENGTH(ADC.app_desc) < 500 THEN 'SHORT_DESCRIPTION'
    WHEN LENGTH(ADC.app_desc) BETWEEN 500 AND 1000 THEN 'MEDIUM_DESCRIPTION'
    ELSE 'LONG_DESCRIPTION'
    END AS APP_DESCRIPTION_LENGTH, 
    AVG(user_rating) AS AVG_RATING
  
  FROM AppleStore A 
  JOIN apple_store_description_combined ADC
  ON 
    A.id = ADC.id
 GROUP BY APP_DESCRIPTION_LENGTH
 ORDER BY AVG_RATING;
 
 --CHECKING PRICES AND SUBSCRIPTION DEVICES CORRELATION AND FINDING RUNNING TOTALS 
 SELECT track_name,
 		user_rating,
 		price, 
 		sup_devices_num,
        SUM(sup_devices_num) OVER(ORDER BY price DESC) AS RUNNING_TOTALS
 FROM AppleStore;
 
 
 
 